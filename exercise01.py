"""


大哥大哥
       1、匹配年月日日期 格式2018-12-6

　　    ^[1-9]\d{0,3}-(1[0-2]|0?[1-9])-(3[01]|[12]\d|0?[1-9])$

　　　　1.^[1-9]表示年是以数字1-9开头的,\d{0,3}表示年的位数,^[1-9]\d{0,3}就表示1-9999年之间

　　　　2.(1[0-2]|0?[1-9])中|前面的1[0-2]表示从10到12,后面的0?[1-9]表示01-09或者1-9,

　　　　　　(1[0-2]|0?[1-9])表示月,01-12或者1-12

　　　　3.(3[01]|[12]\d|0?[1-9])$其中3[01]表示30或31,[12]\d表示从10-29,最后的0?[1-9]表示从

　　　　　　01-09或者是从1-9.整体就表示从01-31或者1-31



"""
import re

#  1、匹配年月日日期 格式2018-12-6
l01 = '2018-12-6'
data = re.search(r'[1-9]\d{0,3}-(1[0-2]|0?[1-9])-(3[01]|[12]\d|0?[1-9])', l01).group()
print(data)

# 2、长度为8-10位的用户密码 ： 包含数字字母下划线

l02 = 'ads3399254'
data = re.findall(r'\w{8,10}', l02)
print(data)

# 3、匹配验证码：4位数字字母组成的

# 　[\da-zA-Z]{4}或者[0-9a-zA-Z]{4}
# 　[ ]里面的表示数字,或者a-z或者A-Z,{4}表示4位

l03 = 'asd4'

# 4、从类似
# <a>wahaha</a>
# <b>banana</b>
# <h1>qqxing</h1>
# 这样的字符串中，
# 1）匹配出wahaha，banana，qqxing内容。
# 　　\w{6}
# 　　>\w+<

# 2）匹配出a,b,h1这样的内容
# 　　<\w+>


# 5、1-2\*((60-30+(-40/5)\*(9-2\*5/3+7/3\*99/4\*2998+10\*568/14))-(-4\*3)/(16-3\*2))
# 1）从上面算式中匹配出最内层小括号以及小括号内的表达式
# \([^()]+\)　　\(和\)表示前后位( ),[^()]就表示外面的()里面没有()
s = '1-2\*((60-30+(-40/5)\*(9-2\*5/3+7/3\*99/4\*2998+10\*568/14))-(-4\*3)/(16-3\*2))'
data = re.findall(r"\([^()]+\)", s)
print(data)

# 6、从类似9-2\*5/3+7/3\*99/4\*2998+10\*568/14的表达式中匹配出从左到右第一个乘法或除法
# \d+[\*/]\d+            [*/]前后的\d+表示*或/前面的整数,可能是多位数字,要加+
s01 = "9-2\*5/3+7/3\*99/4\*2998+10\*568/14"
data = re.search(r'\d+[*/]\d+',s01).group()
print(data)
